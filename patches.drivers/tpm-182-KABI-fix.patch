From 7126e9e3ea9a82d77dbf391694f14674383bb173 Mon Sep 17 00:00:00 2001
From: Michal Suchanek <msuchanek@suse.de>
Date: Wed, 9 Aug 2017 23:04:00 +0200
Subject: [PATCH] tpm: KABI fix

References: bsc#1053117
Patch-mainline: never, kabi

Signed-off-by: Michal Suchanek <msuchanek@suse.de>
---
 drivers/base/core.c         | 12 +++++++++---
 drivers/char/tpm/Kconfig    |  2 +-
 drivers/char/tpm/tpm-chip.c |  3 +--
 include/linux/device.h      |  2 --
 4 files changed, 11 insertions(+), 8 deletions(-)

diff --git a/drivers/base/core.c b/drivers/base/core.c
index afe045792796..bab797bf5311 100644
--- a/drivers/base/core.c
+++ b/drivers/base/core.c
@@ -2054,6 +2054,9 @@ out:
 }
 EXPORT_SYMBOL_GPL(device_move);
 
+/* KABI hack */
+extern struct class * tpm_class;
+int tpm_class_shutdown(struct device *dev);
 /**
  * device_shutdown - call ->shutdown() on each device to shutdown.
  */
@@ -2094,11 +2097,14 @@ void device_shutdown(void)
 		pm_runtime_get_noresume(dev);
 		pm_runtime_barrier(dev);
 
-		if (dev->class && dev->class->shutdown) {
+#ifdef CONFIG_TCG_TPM
+		if (dev->class && (dev->class == tpm_class)) {
 			if (initcall_debug)
 				dev_info(dev, "shutdown\n");
-			dev->class->shutdown(dev);
-		} else if (dev->bus && dev->bus->shutdown) {
+			tpm_class_shutdown(dev);
+		} else
+#endif
+		       if (dev->bus && dev->bus->shutdown) {
 			if (initcall_debug)
 				dev_info(dev, "shutdown\n");
 			dev->bus->shutdown(dev);
diff --git a/drivers/char/tpm/Kconfig b/drivers/char/tpm/Kconfig
index 3b84a8b1bfbe..61ad604494aa 100644
--- a/drivers/char/tpm/Kconfig
+++ b/drivers/char/tpm/Kconfig
@@ -3,7 +3,7 @@
 #
 
 menuconfig TCG_TPM
-	tristate "TPM Hardware Support"
+	bool "TPM Hardware Support"
 	depends on HAS_IOMEM
 	select SECURITYFS
 	---help---
diff --git a/drivers/char/tpm/tpm-chip.c b/drivers/char/tpm/tpm-chip.c
index bb06f97fb666..465fe7d6219d 100644
--- a/drivers/char/tpm/tpm-chip.c
+++ b/drivers/char/tpm/tpm-chip.c
@@ -136,7 +136,7 @@ static void tpm_dev_release(struct device *dev)
  * TPM2: sysfs uses an implicit lock on chip->ops, so this could race if TPM2
  * has sysfs support enabled before TPM sysfs's implicit locking is fixed.
  */
-static int tpm_class_shutdown(struct device *dev)
+int tpm_class_shutdown(struct device *dev)
 {
 	struct tpm_chip *chip = container_of(dev, struct tpm_chip, dev);
 
@@ -199,7 +199,6 @@ struct tpm_chip *tpmm_chip_alloc(struct device *dev,
 	dev_set_drvdata(dev, chip);
 
 	chip->dev.class = tpm_class;
-	chip->dev.class->shutdown = tpm_class_shutdown;
 	chip->dev.release = tpm_dev_release;
 	chip->dev.parent = dev;
 #ifdef CONFIG_ACPI
diff --git a/include/linux/device.h b/include/linux/device.h
index 741fa2e64e59..2865aa8f2d52 100644
--- a/include/linux/device.h
+++ b/include/linux/device.h
@@ -368,7 +368,6 @@ int subsys_virtual_register(struct bus_type *subsys,
  * @suspend:	Used to put the device to sleep mode, usually to a low power
  *		state.
  * @resume:	Used to bring the device from the sleep mode.
- * @shutdown:	Called at shut-down time to quiesce the device.
  * @ns_type:	Callbacks so sysfs can detemine namespaces.
  * @namespace:	Namespace of the device belongs to this class.
  * @pm:		The default device power management operations of this class.
@@ -397,7 +396,6 @@ struct class {
 
 	int (*suspend)(struct device *dev, pm_message_t state);
 	int (*resume)(struct device *dev);
-	int (*shutdown)(struct device *dev);
 
 	const struct kobj_ns_type_operations *ns_type;
 	const void *(*namespace)(struct device *dev);
-- 
2.10.2


From: Jiri Slaby <jslaby@suse.cz>
Subject: kABI: protect struct tpm_chip
Patch-mainline: never, kabi
References: kabi

In 4.4.78, commits 5e07de5b5a4ea5c5b56ff73f359a248d97926629 (tpm: Get
rid of chip->pdev) and 5ec5771bcb2b4c45771f3f750701ab79dd4cb21a (tpm:
Provide strong locking for device removal), upstream commits
8cfffc9d4d3786d3b496a021d7224e06328bac7d and
4e26195f240d73150e8308ae42874702e3df8d2c added ops_sem to and removed
pdev from struct tpm_chip, respectively.

In 4.4.80, commit f7e0f7f86ce0cf83e3e352399eec5d3b23566824 (tpm: Replace
device number bitmap with IDR), upstream commit
15516788e581eb32ec1c50e5f00aba3faf95d817 removed list from struct
tpm_chip.

This indeed changed the layout of the structure and the kABI checker now
complains.

Given this is only a TPM internal structure, make the changes invisible
to the kABI checker.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 drivers/char/tpm/tpm.h |    9 +++++++++
 1 file changed, 9 insertions(+)

--- a/drivers/char/tpm/tpm.h
+++ b/drivers/char/tpm/tpm.h
@@ -171,6 +171,9 @@ enum tpm_chip_flags {
 };
 
 struct tpm_chip {
+#ifdef __GENKSYMS__
+	struct device *pdev;
+#endif
 	struct device dev;
 	struct cdev cdev;
 
@@ -178,7 +181,9 @@ struct tpm_chip {
 	 * (sometimes implicitly, eg for the sysfs code). ops becomes null
 	 * when the driver is unregistered, see tpm_try_get_ops.
 	 */
+#ifndef __GENKSYMS__
 	struct rw_semaphore ops_sem;
+#endif
 	const struct tpm_class_ops *ops;
 
 	unsigned int flags;
@@ -200,6 +205,10 @@ struct tpm_chip {
 	acpi_handle acpi_dev_handle;
 	char ppi_version[TPM_PPI_VERSION_LEN + 1];
 #endif /* CONFIG_ACPI */
+
+#ifdef __GENKSYMS__
+	struct list_head list;
+#endif
 };
 
 #define to_tpm_chip(d) container_of(d, struct tpm_chip, dev)
